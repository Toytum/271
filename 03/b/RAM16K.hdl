// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

PARTS:
    DMux8Way(in=load, sel=address[11..13], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM4k(in=in, load=a, address=address[0..10], out=ao);
    RAM4k(in=in, load=b, address=address[0..10], out=bo);
    RAM4k(in=in, load=c, address=address[0..10], out=co);
    RAM4k(in=in, load=d, address=address[0..10], out=do);
    RAM4k(in=in, load=e, address=address[0..10], out=eo);
    RAM4k(in=in, load=f, address=address[0..10], out=fo);
    RAM4k(in=in, load=g, address=address[0..10], out=go);
    RAM4k(in=in, load=h, address=address[0..10], out=ho);
    Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address[11..13], out=out);
}